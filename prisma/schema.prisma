generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int          @id @default(autoincrement())
  name      String
  email     String       @unique
  password  String
  createdAt DateTime     @default(now())

  // Tasks this user created
  // tasks     Task[]       @relation("CreatedTasks") - Relation removed

  // Tasks assigned directly to this user
  // assigned  Task[]       @relation("AssignedTasks") - Relation removed

  // Team members this user added
  // members   TeamMember[] - This relation is removed as TeamMember is now directly linked to Supabase user via a string ID
}

model TeamMember {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  role      String
  joinDate  DateTime @default(now())

  // owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   String // Changed from Int to String to store Supabase user ID

  // Tasks assigned to this team member
  tasks     Task[]   @relation("TeamMemberTasks")
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  dueDate     DateTime?
  priority    String
  status      String   @default("pending")
  createdAt   DateTime @default(now())

  // Who created the task (Supabase User ID)
  createdById String

  // If assigned directly to a user (Supabase User ID)
  assigneeId  String?

  // If assigned to a team member
  teamMember  TeamMember? @relation("TeamMemberTasks", fields: [teamMemberId], references: [id])
  teamMemberId Int?
}
